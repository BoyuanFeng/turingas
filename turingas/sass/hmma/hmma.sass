<PARAMS>
input, 8
output, 8
</PARAMS>

<REGS>
0, 1 : time_start, time_end 

2, 3 : a0, a1
4, 5 : b0, b1

6, 7 : c0, c1

8 : iteration

10, 11 : output_0, output_1
12, 13 : input_0, input_1
</REGS>

--:-:-:-:2    MOV iteration, RZ;
--:-:-:-:2    MOV output_0, output[0];
--:-:-:-:2    MOV output_1, output[1];
--:-:-:-:2    MOV input_0, input[0];
--:-:-:-:2    MOV input_1, input[1];

--:-:-:-:2    CS2R time_start, SR_CLOCKLO;

LOOP:
--:-:-:-:5    IADD3 iteration, iteration, 0x1, RZ;
--:-:-:-:1    ISETP.LT.AND P0, PT, iteration, 128, PT; 

<CODE>
out = []

length = 256
for line in range(length):
  out.append('--:-:-:-:2     HMMA.1688.F16 c0, a0, b0, c0;')

out_ = '\n'.join(out)
</CODE>

--:-:-:-:2 @P0   BRA LOOP;

--:-:-:-:5     CS2R time_end, SR_CLOCKLO;
--:-:-:-:6     IADD3 time_end, time_end, -time_start, RZ;
--:1:-:-:2     STG.E [output_0], time_end;

--:-:-:-:2     EXIT;


